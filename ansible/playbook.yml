#!/usr/bin/env ansible-playbook
---
- name: Create groups to run different plays on different distributions
  hosts: all
  tags: always
  tasks:
  - name: Group by distribution
    group_by: key={{ ansible_distribution }}

- name: Setup command line shell on Chrome OS
  hosts: Chrome-OS
  become: true
  become_user: root
  gather_facts: false
  tasks:
    - name: Folder for shell profile settings
      file: path=/usr/local/etc/profile.d/ state=directory mode=0755
    - name: Copy OSC52 functions into profile
      copy: src=../chroot/etc/profile.d/osc52.sh dest=/usr/local/etc/profile.d/
    - name: Write settings to ~/.bashrc
      lineinfile:
        path: /home/chronos/user/.bashrc
        line: "{{ item }}"
      with_items:
        - "set -o vi"
        - 'alias ac="sh {{ playbook_dir | dirname }}/enter.sh"'
        - "for i in /usr/local/etc/profile.d/*.sh ; do \
           if [ -r $i ] ; then . $i; fi ; done"

- name: Install vim-markdownfmt under Alpine
  hosts: Alpine
  become: true
  become_user: root
  gather_facts: false
  roles:
    - markdown

- name: Tools for working on ansible
  hosts: Alpine
  tags: ansible
  become: true
  become_user: root
  gather_facts: false
  roles:
    - ansible

- name: Install binaries on Chrome OS
  hosts: Chrome-OS
  tags: chrome-os-binaries
  become: true
  become_user: root
  gather_facts: no
  roles:
    -   chrome-os-binaries

- name: Install git-jump if missing and git is installed
  hosts: all
  become: true
  become_user: root
  gather_facts: no
  tasks:
  - name: Check if git is available
    command: which git
    register: which_git
    changed_when: False
    ignore_errors: yes
  - name:  Check if git-jump is available
    command: which git-jump
    register: which_git_jump
    changed_when: False
    ignore_errors: yes
  - name: Install git_jump
    when: >
      not ansible_check_mode
      and which_git.rc == 0
      and which_git_jump.rc != 0
    get_url:
      url: "https://raw.githubusercontent.com/git/git/master/\
            contrib/git-jump/git-jump"
      dest: /usr/local/bin/git-jump
      mode: 0755

- name: Install osc52.vim on Alpine
  hosts: Alpine
  become: true
  become_user: root
  gather_facts: no
  tasks:
    - name: Create a directory for osc52.vim
      file: path=/usr/share/vim/vimfiles/plugin/ state=directory mode=0755
    - name: Download osc52.vim
      get_url:
        dest: /usr/share/vim/vimfiles/plugin/
        url: "https://raw.githubusercontent.com/chromium/hterm/master/\
              etc/osc52.vim"
        dest: /usr/share/vim/vimfiles/plugin/

- name: Install opfunc.vim under Alpine
  hosts: Alpine
  tasks:
    - file:
        path: /usr/share/vim/vimfiles/autoload/
        state: directory
        mode: 0755
    - name: copy opfunc.vim from removable media
      ignore_errors: yes
      register: opfunc_copy
      copy:
        src: "/media/removable/DATA/configuration/\
              runtimepath/autoload/opfunc.vim"
        dest: /usr/share/vim/vimfiles/autoload/
    - when: not ansible_check_mode and opfunc_copy.size is defined
      file:
        path: /usr/share/vim/vimfiles/plugin/
        state: directory
        mode: 0755
    - when: not ansible_check_mode and opfunc_copy.size is defined
      copy:
        dest: /usr/share/vim/vimfiles/plugin/opfunc.vim
        content: call opfunc#All()

- name: Set timezone on Alpine
  hosts: Alpine
  tags: timezone
  become: true
  become_user: root
  handlers:
    - name: Install time-zone data
      listen: Timezone changed
      apk: name=tzdata state=present
    - name: Write time-zone file to /etc
      listen: Timezone changed
      copy: src=/usr/share/zoneinfo/Europe/Belfast dest=/etc/localtime
  tasks:
    - name: Update /etc/timezone
      register: timezone
      copy: dest=/etc/timezone content="Europe/Belfast\n"
      notify: Timezone changed
    - meta: flush_handlers
    - name: Remove time-zone data
      apk: name=tzdata state=absent

