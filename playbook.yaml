#!/usr/bin/env ansible-playbook
# Alpine: ./playbook.yaml      Chrome OS: sudo ./playbook.yaml
---
- name: Create groups to run different plays on different distributions
  hosts: all
  tags: always
  tasks:
    - name: Group by distribution
      group_by: { key: "{{ ansible_distribution }}" }

- name: Install tools on Alpine
  hosts: Alpine
  become: true
  gather_facts: false
  tasks:
    - name: Download working version of man.vim (no `env -u`)
      get_url:
        dest: /usr/share/vim/vim80/ftplugin/man.vim
        url: "https://raw.githubusercontent.com/vim/vim/v8.0.1000/\
          runtime/ftplugin/man.vim"
        checksum: "sha256:\
          7cf6efba7f7b8d0930f4da477c3f92d8fda25c41795018110dd018adfa2d4bde"

- name: Install binaries on Chrome OS
  hosts: Chrome-OS
  tags: chrome-os-binaries,docker
  become: true
  gather_facts: no
  roles:
    -   chrome-os-binaries
    -   docker

- name: Download and install hterm files
  hosts: all
  become: true
  vars:
    repo: https://raw.githubusercontent.com/libapps/libapps-mirror/master/
  tasks:
    - name: Create a directory for osc52.vim
      when: ansible_distribution == 'Alpine'
      file: path=/usr/share/vim/vimfiles/plugin/ state=directory mode=0755
    - name: Download osc52.vim
      when: ansible_distribution == 'Alpine'
      get_url:
        dest: /usr/share/vim/vimfiles/plugin/
        url: "{{ repo }}hterm/etc/osc52.vim"
    - name: Download osc52.sh
      get_url:
        dest: /usr/local/bin/
        url: "{{ repo }}hterm/etc/{{ item }}"
        mode: 0755
      with_items:
        - osc52.sh
        - hterm-notify.sh

- name: Setup command line shell on Chrome OS
  hosts: Chrome-OS
  become: true
  gather_facts: false
  tasks:
    - name: Folder for shell profile settings
      file: path=/usr/local/etc/profile.d/ state=directory mode=0755
    - name: Copy OSC52 functions into profile
      copy:
        src: "{{ playbook_dir }}/chroot/etc/profile.d/osc52.sh"
        dest: /usr/local/etc/profile.d/
    - name: Write settings to ~/.bashrc
      lineinfile:
        path: /home/chronos/user/.bashrc
        line: "{{ item }}"
      with_items:
        - set -o vi
        - 'alias ac="sh {{ playbook_dir }}/enter.sh"'
        - "for i in /usr/local/etc/profile.d/*.sh ; do \
           if [ -r $i ] ; then . $i; fi ; done"
        - export EDITOR="/usr/bin/vim"

- name: Set timezone on Alpine
  hosts: Alpine
  tags: timezone
  become: true
  handlers:
    - name: Install time-zone data
      listen: Timezone changed
      apk: name=tzdata state=present
    - name: Write time-zone file to /etc
      listen: Timezone changed
      copy: src=/usr/share/zoneinfo/Europe/Belfast dest=/etc/localtime
  tasks:
    - name: Update /etc/timezone
      register: timezone
      copy: dest=/etc/timezone content="Europe/Belfast\n"
      notify: Timezone changed
    - meta: flush_handlers
    - name: Remove time-zone data
      apk: name=tzdata state=absent
