---
- name: Create directory
  file: dest=/usr/local/docker state=directory owner=chronos group=chronos
- name: Fetch Docker binaries
  unarchive:
    remote_src: yes
    owner: chronos
    group: chronos
    src: "https://download.docker.com/linux/static/stable/x86_64/\
          docker-17.09.0-ce.tgz"
    # Not an ideal location, as not FHS compliant, but is mounted exec and
    # rw on boot
    dest: /usr/local/
    creates: /usr/local/docker/docker
- name: Link to docker from /usr/local/bin
  file: state=link src=/usr/local/docker/docker dest=/usr/local/bin/docker
- name: Make sure unshare is available
  command: busybox.static --list
  register: result
  changed_when: false
  failed_when: "'unshare' not in result.stdout_lines"
- name: Directories
  file: state=directory path=/usr/local/docker/{{ item }}
  with_items:
    - etc
    - etc/docker
    - etc/ssl
    - etc/ssl/certs
    - var
    - var/lib
    - .etc
    - .etc/ssl
    - .etc/ssl/certs
- name: Links
  file:
    state: link
    src: /usr/local/docker/.{{ item }}
    path: /usr/local/docker/{{ item }}
    force: yes
  with_items:
    - etc/os-release
    - etc/resolv.conf
    - etc/ssl/certs/ca-certificates.crt
- name: etc/group
  copy:
    dest: /usr/local/docker/etc/group
    content: |
      docker:x:1000:
- name: etc/docker/daemon.json
  copy:
    dest: /usr/local/docker/etc/docker/daemon.json
    content: |
      {
        "storage-driver": "vfs"
      }
- name: dockerd.sh
  copy:
    dest: /usr/local/bin/dockerd.sh
    mode: 0755
    content: |
      #!/bin/bash
      sudo busybox.static unshare -m /bin/bash <<EOF
      PATH="/sbin:/usr/local/docker:${PATH}" &&
      export PATH &&
      cd /usr/local/docker &&
      mount --bind /etc .etc &&
      mount --bind etc /etc &&
      mount --bind var/lib /var/lib &&
      umount /sys/fs/cgroup/cpuset &&
      dockerd --debug $@
      EOF
